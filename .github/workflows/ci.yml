name: LoadUp CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      
    - name: Run linting
      run: npm run lint

  deploy-admin:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build Admin Dashboard
      run: npm run build --filter=admin-dashboard
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
    
    - name: Deploy to Vercel
      run: |
        npm install --global vercel@latest
        cd apps/admin-dashboard
        vercel deploy --prod --token=${{ secrets.VERCEL_AUTH_TOKEN }}

  deploy-driver-app:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_ACCESS_TOKEN }}
    
    - name: Install dependencies
      run: |
        cd apps/driver-app
        npm install
    
    - name: Build and publish
      run: |
        cd apps/driver-app
        expo publish --non-interactive
      env:
        EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        EXPO_PUBLIC_CLERK_JWT_KEY: ${{ secrets.EXPO_PUBLIC_CLERK_JWT_KEY }}
        EXPO_PUBLIC_MAPBOX_TOKEN: ${{ secrets.EXPO_PUBLIC_MAPBOX_TOKEN }}
