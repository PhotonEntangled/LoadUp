name: LoadUp CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm install
      
    - name: Run Tests
      run: npm test
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      
    - name: Run Linting
      run: npm run lint

  deploy-admin:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm install
    
    - name: Setup Build Cache
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
          .turbo
        key: ${{ runner.os }}-nextjs-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-nextjs-
    
    - name: Build Admin Dashboard
      run: npm run build --filter=admin-dashboard
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        NEXT_PUBLIC_MAPBOX_TOKEN: ${{ vars.NEXT_PUBLIC_MAPBOX_TOKEN }}
    
    - name: Deploy to Vercel
      run: |
        npm install --global vercel@latest
        cd apps/admin-dashboard
        vercel deploy --prod --token=${{ secrets.VERCEL_AUTH_TOKEN }}

  deploy-driver-app:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_ACCESS_TOKEN }}
    
    - name: Install Dependencies
      run: |
        cd apps/driver-app
        npm install
    
    - name: Build and Publish
      run: |
        cd apps/driver-app
        expo publish --non-interactive
      env:
        EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ vars.EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        EXPO_PUBLIC_CLERK_JWT_KEY: ${{ vars.EXPO_PUBLIC_CLERK_JWT_KEY }}
        EXPO_PUBLIC_MAPBOX_TOKEN: ${{ vars.EXPO_PUBLIC_MAPBOX_TOKEN }}
