name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Update path aliases
        run: node scripts/update-tsconfig.js

      - name: Validate imports
        run: node scripts/validate-imports.js

      - name: Lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: validate
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Update path aliases
        run: node scripts/update-tsconfig.js
        
      - name: Setup test database
        run: npm run db:setup-test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Verify database connection
        run: npx drizzle-kit check:pg
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          NEXTAUTH_SECRET: test_secret
          NEXTAUTH_URL: http://localhost:3000

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: ./coverage
          retention-days: 7

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Update path aliases
        run: node scripts/update-tsconfig.js

      - name: Build API
        run: cd packages/api && npm run build
        
      - name: Build Admin Dashboard
        run: cd apps/admin-dashboard && npm run build
        
      - name: Build Driver App
        run: cd apps/driver-app && npm run build

      - name: Verify builds
        run: |
          if [ ! -d "apps/admin-dashboard/.next" ]; then
            echo "Admin dashboard build failed"
            exit 1
          fi
          if [ ! -d "apps/driver-app/dist" ]; then
            echo "Driver app build failed"
            exit 1
          fi
          if [ ! -d "packages/api/dist" ]; then
            echo "API build failed"
            exit 1
          fi

      - name: Upload admin dashboard build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: admin-dashboard-build
          path: apps/admin-dashboard/.next
          retention-days: 7
          
      - name: Upload driver app build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: driver-app-build
          path: apps/driver-app/dist
          retention-days: 7
          
      - name: Upload API build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-build
          path: packages/api/dist
          retention-days: 7