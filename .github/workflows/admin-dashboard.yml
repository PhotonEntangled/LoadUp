name: Admin Dashboard CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/admin-dashboard/**'
      - 'packages/**'
      - '.github/workflows/admin-dashboard.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/admin-dashboard/**'
      - 'packages/**'
  workflow_dispatch:

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for Sentry release

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint admin dashboard
        run: cd apps/admin-dashboard && npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run admin dashboard tests
        run: cd apps/admin-dashboard && npm test
        env:
          NEXTAUTH_SECRET: test_secret
          NEXTAUTH_URL: http://localhost:3000

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for Sentry release

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Set Sentry environment variables
        env:
          HAS_SENTRY_DSN: ${{ secrets.SENTRY_DSN != '' }}
        run: |
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
          echo "HAS_SENTRY_CONFIG=${{ env.HAS_SENTRY_DSN }}" >> $GITHUB_ENV
          
          if [[ "${{ env.HAS_SENTRY_DSN }}" == "true" ]]; then
            echo "SENTRY_ORG=${{ secrets.SENTRY_ORG }}" >> $GITHUB_ENV
            echo "SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}" >> $GITHUB_ENV
            echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Create Sentry release
        if: env.HAS_SENTRY_CONFIG == 'true'
        run: |
          npm install @sentry/cli
          VERSION=$(node -e "console.log(require('./apps/admin-dashboard/package.json').version)")
          RELEASE="${{ github.repository }}-admin-dashboard@$VERSION"
          echo "SENTRY_RELEASE=$RELEASE" >> $GITHUB_ENV
          npx sentry-cli releases new "$RELEASE"
          npx sentry-cli releases set-commits "$RELEASE" --auto
          
      - name: Build admin dashboard
        run: cd apps/admin-dashboard && npm run build
        env:
          NODE_ENV: production
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'test_secret' }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'http://localhost:3000' }}
          SENTRY_RELEASE: ${{ env.SENTRY_RELEASE || '' }}

      - name: Finalize Sentry release
        if: env.HAS_SENTRY_CONFIG == 'true'
        run: |
          npx sentry-cli releases finalize "$SENTRY_RELEASE"

      - name: Upload admin dashboard build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: admin-dashboard-build
          path: apps/admin-dashboard/.next
          retention-days: 7

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: admin-dashboard-build
          path: apps/admin-dashboard/.next

      - name: Set Sentry environment variables
        env:
          HAS_SENTRY_DSN: ${{ secrets.SENTRY_DSN != '' }}
        run: |
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
          echo "HAS_SENTRY_CONFIG=${{ env.HAS_SENTRY_DSN }}" >> $GITHUB_ENV
          
          if [[ "${{ env.HAS_SENTRY_DSN }}" == "true" ]]; then
            echo "SENTRY_ORG=${{ secrets.SENTRY_ORG }}" >> $GITHUB_ENV
            echo "SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}" >> $GITHUB_ENV
            echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Deploy to Vercel
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            vercel deploy ./apps/admin-dashboard --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy ./apps/admin-dashboard --token=${{ secrets.VERCEL_TOKEN }}
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          
      - name: Create Sentry deploy
        if: env.HAS_SENTRY_CONFIG == 'true'
        run: |
          VERSION=$(node -e "console.log(require('./apps/admin-dashboard/package.json').version)")
          RELEASE="${{ github.repository }}-admin-dashboard@$VERSION"
          ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
          npx sentry-cli releases deploys "$RELEASE" new -e "$ENVIRONMENT" 